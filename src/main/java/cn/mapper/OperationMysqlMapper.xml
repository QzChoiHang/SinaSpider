<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="cn.mapper.OperationMysqlMapper">

	<!-- 获取 WebSite 规则 -->
	<select id="getWebSite"  resultType="cn.climbDemo.entity.WebSite">
		SELECT
			*
		FROM
			webSite		
	</select>
	
	<!-- 获取关键字 -->
	<select id="queryKeyWords" resultType="cn.climbDemo.entity.Keywords">
		SELECT 
			id,
			keyword,
			serchWhere,
			state
		FROM 
			keywords
		WHERE
			state = 1
	</select>

	
	<!-- 插入博主信息 -->							  
	<insert id="insertBloggerInfo" parameterType="cn.climbDemo.entity.BloggerInfo" >
		INSERT INTO bloggerinfo(
			id,
			bloggerName,
			bloggerJob,
			attentionNumber,
			fansNumber,
			tweetNumber ) 
		VALUES (
			#{id},
			#{bloggerName},
			#{bloggerJob},
			#{attentionNumber},
			#{fansNumber},
			#{tweetNumber}
		)
	</insert>

	<!-- 插入博主发出微博信息 -->							  
	<insert id="insertBloggerTweet" parameterType="cn.climbDemo.entity.BloggerTweet" >
		INSERT INTO bloggertweet(
			id,
			bId,
			tweetTitle,
			tweetTime,
			tweetVideoUrl,
			tweetVideoName,
			transpondNumber,
			commentNumber,
			likeNumber,
			tweetIVPath ) 
		VALUES (
			#{id},
			#{bId},
			#{tweetTitle},
			#{tweetTime},
			#{tweetVideoUrl},
			#{tweetVideoName},
			#{transpondNumber},
			#{commentNumber},
			#{likeNumber},
			#{tweetIVPath}
		)
	</insert>
	
	<!-- 插入博主发出微博的图片url -->							  
	<insert id="insertBloggerTweetImageUrl" parameterType="cn.climbDemo.entity.BloggerTweetImageUrl" >
		INSERT INTO bloggertweetimageurl(
			id,
			tId,
			imageUrl,
			imageName ) 
		VALUES (
			#{id},
			#{tId},
			#{imageUrl},
			#{imageName}
		)
	</insert>
	
	
	
	
	
	
	
	
	
	<!-- 采集完将state修改为0 -->
	<update id="updateKeyWord" parameterType="int">
		UPDATE 
			keywords 
		SET 
			state = 0 
		WHERE 
			id = #{id}
	</update>
	
	
	<!-- 将state修改为1 -->
	<update id="updateKeyWords" >
		UPDATE 
			keywords 
		SET 
			state = 1 
	</update>
</mapper>